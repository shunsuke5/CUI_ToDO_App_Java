CUI_ToDo_App_Java メモ

###20240505###

・CUIのToDoアプリを作成する。要件としては以下。

    最初に「追加」「完了」のどちらかを選ぶ。
    「追加」なら「やること」を入力し、それがリストに追加される。
    「完了」なら完了した「やること」を選択し、それがリストから削除される。
    「やること」リストは常に表示する。
    「やること」リストは上限99個まで

・余裕があれば以下にチャレンジしたい。

    「やること」リストを可変長にして上限を無くす
    「やること」リストは画面からはみ出ないようにする。はみ出るぐらい数が多い場合は、
    　途中まで表示し、「次のページへ」などのボタンを追加できるようにする
    プログラムを一回閉じても内容を保存できるようにする(難しそう)
    現在のタスクが1つもないときにただの空白ではわかりづらいため、
    　タスクが1つもない場合は、「なし」と表示するようなプログラムを書く

・外部のtxtファイルに内容を保存して起動時はそれを読み込む、と言った形はどうだろうか？

・タスクを完了させたときの動作について、例えば、現在リストには[0]～[4]まで5つのタスクがあるとする。
　[2]のタスクを完了させたとする。この時、3,4,5のタスクを前に詰めるにはどのようなプログラムを記述すればよいか？
　for文で[completeNum] = [completeNum + 1]　のようにすればいけるか？しかしこうすると、例えば、
　[4]のタスクを完了させたときに何か変な動作にならないだろうか？これはテストしてみる。

・考えられる例外処理としては
　　タスクに何も記入がないままEnterを押す
　　タスクリスト外の番号を選択する

・「int choice = scanner.nextInt();」のscanner.nextInt()がnullになってしまっている。
　つまり入力を待つことができていない？Scannerについてmainで色々試してみる。

　公式ドキュメントのScannerクラスのnextInt()の説明を見てみると、
　NoSuchElementException - スキャンする入力が無くなった場合　のように記述してある。
　　→ 原因は、scanner.close()をappend()とcomplete()で行ってしまっていたからだと推測する。
　　　単純にそのメソッド内のscannerだけをclose()するのかと思ったがどうやら全てのscannerを
　　　closeしてしまうらしい。なので、append()とcomplete()内のscanner.close()を消去し、
　　　end()にのみscanner.close()を記述することで一応想定通りの動きとはなった。
　　　しかし、この変更により発生した2か所の「Resource leak: 'scanner' is never closed」
　　　は未解決のため、余裕があればこれを修正したい。

・全角文字が文字化けしてしまうのでこれを直したい。
　一応コマンドプロンプトの設定をchcp 65001(utf-8に変更)とすれば問題なく表示されることは確認済み。
　元のShift-Jisは932。
　コマンドプロンプトから入力(Shift-Jis) → Javaプログラム内の変数に格納(UTF-8) →
　コマンドプロンプトに表示(Shift-Jis)　の流れだから、
　タスクリストを表示する前に文字コードを変えるような処理を入れればよい？

・リストのタスクに番号を振っていないため、完了の際にどの番号を選択すればいいかがわからない。
　これを修正する。

・「完了」で、全然違う番号を選択しても、最後のタスクが消去されてしまうことに気づいた。
　これを修正する。

　原因としては、例外処理を記述せずにtaskCount--;としていることだと推測する。
　つまり、想定しない数字が入力されたら例外処理を挟み、taskCount--;を行わずにもう一度
　入力させるなどの措置を取れば解決するはず。

[進捗]
「完了」で想定より大きい番号を選択すると、最後のタスクが消去されてしまうのを修正する → 取組中
例外処理を記述する
全角文字が文字化けするのを解決する

[完了]
java.util.NoSuchElementException　を解決する
mainでループ内のscannerを試してみる
最後のタスクを完了させたときにエラーが起こらないかテストする
リストのタスクに番号を表示する
タスクリストの表示をもう少し見やすく、これがタスクリストだと言うことをもう少しわかりやすく伝えたい